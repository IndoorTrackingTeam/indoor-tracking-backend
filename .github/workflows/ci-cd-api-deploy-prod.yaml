name: Build deploy API PROD

on:
  workflow_dispatch:
    inputs:
      manual_deploy:
        description: "Manual Deploy"
        required: true
        type: boolean
        default: true
  push:
    branches:
      - main

env:
  IMAGE: api
  PORT: 8000
  REGION: us-east1
  CPU: 1
  MEMORY: 128Mi
  TIMEOUT: 300
  CONCURRENCY: 80
  MAX_INSTANCES: 1
  MIN_INSTANCES: 0
  DB_URL: ${{ secrets.DB_URL }}
  ENV_QA: ${{ secrets.ENV_QA }}


jobs:
  test: 
    name: Integration Tests
    runs-on: ubuntu-latest
    environment: backend

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r api/requirements.txt

    - name: Integration tests with pytest
      run: |
        pytest -vv --cov
    
  deploy:
    name: Deploy API
    needs: test
    runs-on: ubuntu-latest
    environment: backend

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - id: 'auth'
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Use gcloud CLI
      run: gcloud info

    - name: Login to GCR
      uses: docker/login-action@v1
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Docker configuration
      run: |-
        gcloud auth configure-docker \
        us-east1-docker.pkg.dev

    - name: Build
      run: |-
        docker build \
          --tag "us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/ar-backend/${{ env.IMAGE }}-prod:latest" \
          ./api

    - name: Publish
      run: |-
        docker push "us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/ar-backend/${{ env.IMAGE }}-prod:latest"

    - name: Deploy
      run: |
        gcloud run deploy run-${{ env.IMAGE }}-prod \
        --image us-east1-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/ar-backend/${{ env.IMAGE }}-prod:latest \
        --platform managed \
        --allow-unauthenticated \
        --cpu=$CPU \
        --port=$PORT \
        --memory=$MEMORY \
        --region $REGION \
        --timeout=$TIMEOUT \
        --concurrency=$CONCURRENCY \
        --min-instances=$MIN_INSTANCES \
        --max-instances=$MAX_INSTANCES \
        --set-env-vars=DB_URL=$DB_URL \
        --set-env-vars=ENV_QA=$ENV_QA